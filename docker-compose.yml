---
version: "3.8"
services:
  web:
    build: .
    container_name: amboseli
    environment:
      MIX_ENV: dev
      ERL_MAX_PORTS: 1024
    env_file: [.env]
    hostname: amboseli
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.amboseli.entrypoints=web,websecure
      - traefik.http.routers.amboseli.rule=Host(`amboseli.localhost`)
      - traefik.http.routers.amboseli.service=amboseli-service
      - traefik.http.services.amboseli-service.loadbalancer.server.port=4000
      - traefik.http.routers.amboseli.tls=true
      - traefik.http.routers.amboseli.tls.certresolver=production
    volumes: [.:/app]
    networks: [amboseli_default]
  livebook:
    image: ghcr.io/livebook-dev/livebook
    container_name: livebook
    networks: [amboseli_default]
    restart: unless-stopped
    hostname: livebook
    labels:
      - traefik.enable=true
      - traefik.http.routers.livebook.entrypoints=web,websecure
      - traefik.http.routers.livebook.rule=Host(`livebook.localhost`)
      - traefik.http.routers.livebook.service=livebook-service
      - traefik.http.services.livebook-service.loadbalancer.server.port=8080
      - traefik.http.routers.livebook.tls=true
      - traefik.http.routers.livebook.tls.certresolver=production
    environment:
      - LIVEBOOK_COOKIE=livebook
      - LIVEBOOK_DEFAULT_RUNTIME=attached:livebook@amboseli:livebook
      - LIVEBOOK_TOKEN_ENABLED=false
      - ERL_MAX_PORTS=1024
  storagebroker:
    image: docker.io/perconalab/neon:latest
    container_name: storagebroker
    command: storage_broker -l 0.0.0.0:50051
    networks: [amboseli_default]
    restart: always
    hostname: storagebroker
    labels:
      - traefik.enable=true
      - traefik.http.routers.storagebroker.entrypoints=web,websecure
      - traefik.http.routers.storagebroker.rule=Host(`storagebroker`)
      - traefik.http.routers.storagebroker.service=storagebroker-service
      - traefik.http.services.storagebroker-service.loadbalancer.server.port=50051
      - traefik.http.routers.storagebroker.tls=true
      - traefik.http.routers.storagebroker.tls.certresolver=production
  safekeeper1:
    image: docker.io/perconalab/neon:latest
    container_name: safekeeper
    command:
      safekeeper --id=1 -D /data --broker-endpoint=http://storagebroker:50051
      -l safekeeper1:5454 --listen-http=0.0.0.0:7676
    networks: [amboseli_default]
    restart: always
    hostname: safekeeper1
    labels:
      - traefik.enable=true
      - traefik.http.routers.safekeeper1.entrypoints=web,websecure
      - traefik.http.routers.safekeeper1.rule=Host(`safekeeper1`)
      - traefik.http.routers.safekeeper1.service=safekeeper1-service
      - traefik.http.services.safekeeper1-service.loadbalancer.server.port=7676
      - traefik.http.routers.safekeeper1.tls=true
      - traefik.http.routers.safekeeper1.tls.certresolver=production
  pageserver:
    image: docker.io/perconalab/neon:latest
    container_name: pageserver
    command:
      pageserver -D /data -c "id=1" -c "broker_endpoint='http://storagebroker:50051'"
      -c "listen_pg_addr='0.0.0.0:6400'" -c "listen_http_addr='0.0.0.0:9898'" -c "pg_distrib_dir='/opt/neondatabase-neon/pg_install'"
    networks: [amboseli_default]
    restart: always
    hostname: pageserver
    labels:
      - traefik.enable=true
      - traefik.http.routers.pageserver.entrypoints=web,websecure
      - traefik.http.routers.pageserver.rule=Host(`pageserver`)
      - traefik.http.routers.pageserver.service=pageserver-service
      - traefik.http.services.pageserver-service.loadbalancer.server.port=9898
      - traefik.http.routers.pageserver.tls=true
      - traefik.http.routers.pageserver.tls.certresolver=production
  compute:
    image: docker.io/perconalab/neon:latest
    container_name: compute
    command: /compute.sh
    environment:
      - PAGESERVER=pageserver
      - SAFEKEEPERS=safekeeper1:5454
      - TENANT=2ef73d2d012db777f659adb60672c958
      - TIMELINE=56c48a694100052a7e646e25396d7227
    expose: [55432]
    restart: always
    networks: [amboseli_default]
    hostname: compute
    labels:
      - traefik.enable=true
      - traefik.http.routers.compute.entrypoints=web,websecure
      - traefik.http.routers.compute.rule=Host(`compute`)
      - traefik.http.routers.compute.service=compute-service
      - traefik.http.services.compute-service.loadbalancer.server.port=55432
      - traefik.http.routers.compute.tls=true
      - traefik.http.routers.compute.tls.certresolver=production
networks:
  amboseli_default:
    external: true
